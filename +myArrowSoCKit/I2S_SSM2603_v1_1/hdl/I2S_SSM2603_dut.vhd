-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\hdlcoder_I2S_ssm2603\I2S_SSM2603_dut.vhd
-- Created: 2020-11-19 16:00:37
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: I2S_SSM2603_dut
-- Source Path: I2S_SSM2603/I2S_SSM2603_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY I2S_SSM2603_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        Bit_clock                         :   IN    std_logic;  -- ufix1
        RECLK                             :   IN    std_logic;  -- ufix1
        Serial_data_in                    :   IN    std_logic;  -- ufix1
        Audio_in_data                     :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
        Audio_in_valid                    :   IN    std_logic;  -- ufix1
        PBCLK                             :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        Serial_data_out                   :   OUT   std_logic;  -- ufix1
        Audio_out_data                    :   OUT   std_logic_vector(47 DOWNTO 0);  -- ufix48
        Audio_out_valid                   :   OUT   std_logic;  -- ufix1
        Dammy                             :   OUT   std_logic  -- ufix1
        );
END I2S_SSM2603_dut;


ARCHITECTURE rtl OF I2S_SSM2603_dut IS

  -- Component Declarations
  COMPONENT I2S_SSM2603_src_Subsystem
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Bit_clock                       :   IN    std_logic;  -- ufix1
          RECLK                           :   IN    std_logic;  -- ufix1
          Serial_data_in                  :   IN    std_logic;  -- ufix1
          Audio_in_data                   :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
          Audio_in_valid                  :   IN    std_logic;  -- ufix1
          PBCLK                           :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          Serial_data_out                 :   OUT   std_logic;  -- ufix1
          Audio_out_data                  :   OUT   std_logic_vector(47 DOWNTO 0);  -- ufix48
          Audio_out_valid                 :   OUT   std_logic;  -- ufix1
          Dammy                           :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : I2S_SSM2603_src_Subsystem
    USE ENTITY work.I2S_SSM2603_src_Subsystem(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Bit_clock_sig                    : std_logic;  -- ufix1
  SIGNAL RECLK_sig                        : std_logic;  -- ufix1
  SIGNAL Serial_data_in_sig               : std_logic;  -- ufix1
  SIGNAL Audio_in_valid_sig               : std_logic;  -- ufix1
  SIGNAL PBCLK_sig                        : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Serial_data_out_sig              : std_logic;  -- ufix1
  SIGNAL Audio_out_data_sig               : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL Audio_out_valid_sig              : std_logic;  -- ufix1
  SIGNAL Dammy_sig                        : std_logic;  -- ufix1

BEGIN
  u_I2S_SSM2603_src_Subsystem : I2S_SSM2603_src_Subsystem
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Bit_clock => Bit_clock_sig,  -- ufix1
              RECLK => RECLK_sig,  -- ufix1
              Serial_data_in => Serial_data_in_sig,  -- ufix1
              Audio_in_data => Audio_in_data,  -- ufix48
              Audio_in_valid => Audio_in_valid_sig,  -- ufix1
              PBCLK => PBCLK_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              Serial_data_out => Serial_data_out_sig,  -- ufix1
              Audio_out_data => Audio_out_data_sig,  -- ufix48
              Audio_out_valid => Audio_out_valid_sig,  -- ufix1
              Dammy => Dammy_sig  -- ufix1
              );

  Bit_clock_sig <= Bit_clock;

  RECLK_sig <= RECLK;

  Serial_data_in_sig <= Serial_data_in;

  Audio_in_valid_sig <= Audio_in_valid;

  PBCLK_sig <= PBCLK;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  Serial_data_out <= Serial_data_out_sig;

  Audio_out_data <= Audio_out_data_sig;

  Audio_out_valid <= Audio_out_valid_sig;

  Dammy <= Dammy_sig;

END rtl;

