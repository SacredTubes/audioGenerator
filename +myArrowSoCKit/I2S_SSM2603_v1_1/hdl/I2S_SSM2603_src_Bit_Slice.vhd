-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\hdlcoder_I2S_ssm2603\I2S_SSM2603_src_Bit_Slice.vhd
-- Created: 2020-11-19 16:00:29
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: I2S_SSM2603_src_Bit_Slice
-- Source Path: hdlcoder_I2S_ssm2603/Subsystem/Bit_Slice
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY I2S_SSM2603_src_Bit_Slice IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1                               :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
        In2                               :   IN    std_logic;
        Out1                              :   OUT   std_logic_vector(23 DOWNTO 0);  -- ufix24
        Out2                              :   OUT   std_logic_vector(23 DOWNTO 0)  -- ufix24
        );
END I2S_SSM2603_src_Bit_Slice;


ARCHITECTURE rtl OF I2S_SSM2603_src_Bit_Slice IS

  -- Signals
  SIGNAL In1_unsigned                     : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Delay_bypass_delay               : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Delay_reg                        : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Delay_out1                       : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Bit_Slice_out1                   : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Slice1_out1                  : unsigned(23 DOWNTO 0);  -- ufix24

BEGIN
  In1_unsigned <= unsigned(In1);

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_bypass_delay <= to_unsigned(0, 48);
      Delay_reg <= to_unsigned(0, 48);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND In2 = '1' THEN
        Delay_bypass_delay <= Delay_reg;
        Delay_reg <= In1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay_process;

  
  Delay_out1 <= Delay_reg WHEN In2 = '1' ELSE
      Delay_bypass_delay;

  Bit_Slice_out1 <= Delay_out1(47 DOWNTO 24);

  Out1 <= std_logic_vector(Bit_Slice_out1);

  Bit_Slice1_out1 <= Delay_out1(23 DOWNTO 0);

  Out2 <= std_logic_vector(Bit_Slice1_out1);

END rtl;

